{
  "hash": "9f78749646a634f0923b1987fb359d7f",
  "result": {
    "markdown": "---\ntitle: \"Choosing models for singles: 14C Power and Sensitivity (weeks 2-3)\"\nauthor: \"Pete\"\ndate: \"2023-06-30\"\ncategories: [14C Power/Sensitivity, Research Design, Project Log]\nformat: \n  html: \n    code-fold: true\n    code-overflow: scroll\n---\n\n\n\n\nWelcome back everyone! This took a little longer to put together than anticipated. Truth is, as usual with data projects, there was always the nagging little voice arguing that we should follow the data a little longer... so what's up on the project?\n\nThe plan for week 2 was to have a look at the old project archive and start figuring out what can be done. As discussed in the previous post, the project itself is all about running thousands of simulated radiocarbon dates and modelling them to then be able to suggest data-driven decisions for actual sampling. Now, the simulations all got done (or so I thought!) before I went off to fight the pandemic two years ago, alongside some tools for data exploration. So I some time over the past couple of weeks digging through those old project folders, choosing a particular set of simulations to focus on and taking things forward from there. I'll write up the first batch of analytics next week, this week we'll focus on the actual stuff that was left behind from the academic days.\n\n## Things left behind\nSo the project itself covered three types of radiocarbon models: single calibrated dates, radiocarbon wiggle-match dates, and relatively simple \"sequence\" models. \n\n* The first type of model is just Bayesian calibration of a ^14^C determination to a calendar date (see this [post on calibration](https://c14.arch.ox.ac.uk/calibration.html) curious what that is). \n* The second type of model is a Bayesian wiggle-match date - a bunch of radiocarbon measurements where we know how much time elapsed between the samples - most often gets used for tree-rings (you can find the model ran in a spreadsheet [here](https://chrono.qub.ac.uk/blaauw/) if you want the details).\n* The third type of model were \"Sequences\" - groups of dates where we have some idea of contemporaneity and ordering of the dates, but no information on their exact chronological relationship. So, for example, we know that bone A got deposited before bone B, but no idea how many years apart. Unlike single calibrations and wiggle-match dates, these kinds of models come with multiplicity of parameters and in general use MCMC. If you want to know more, check out the [intro on the Historic England website](https://historicengland.org.uk/images-books/publications/radiocarbon-dating-chronological-modelling/bayesian-chronological-modelling/).\n\nFor each of three kinds of models, I've run several different kinds of simulations. Some focused on particular time periods, others on how results changed with different calibration curves, while other still were concerned with obtaining large mass of simulated measurements over different time periods. Looking through the project archive I found the last category most interesting, and thought I'd start with it. However, before going right to the bit that I wanted to do for two years now - studying the wiggle-match date models, I though I'd begin with single calibrations to brush up on some key tools (and practice new ones).\n\n\n## Single calibrations: how did they get simulated and how many I've got?\nBefore we move forward you might ask, how did the simulated radiocarbon dates get simulated. The procedure is quite simple - you can find it outlined in code in this file [here](https://github.com/pete-jacobsson/14C-power-sensitivity/blob/main/notebook_001_singles_simulate_compare.rmd). In essence, we begin with a know calibration curve, we choose a systematic offset at random. Remember, large part of the project is to check how sensitive we are to such offsets - by the way I set the offset to between -50 and 50 ^14^C year - which is at the limit of difficult to spot lab screw-ups combined with weird atmospheric effects. We then get a vector of measurement errors - the known uncertainty around our simulated measurements. We then choose a point at random one the calibration curve, check the expected ^14^C age, shift it by the offset, and draw a random number from a normal distribution with a standard deviation corresponding to the measurement error. These can then get passed to the calibration program [OxCal](https://c14.arch.ox.ac.uk/oxcal.html#program) via the command line. Once we get the calibrated results we check whether the 68.2% and 95.4% HPD areas estimated by OxCal contain the known target dates.\n\nLooking through the project archive, this leg included 10,000 simulations from across the tree-ring based part of the calibration curve - looking at the period from zero to 12,300 Before Present (cal BP). The first step was to re-acquaint myself with the data. Thankfully there was a [Shiny App](https://github.com/pete-jacobsson/14C-power-sensitivity/tree/main/sensitivity_shiny) that I built two years ago for just that purpose...\n\n\n## So what are the interesting things about these simulations?\nThere are a few things that can be said about the main singles data set, but the things that I found relevant had to do specifically with the accuracy of the simulations under different offsets. \n\nFirst, as expected for both 95.4% and 68.2% HPD areas we can see that there is some area of grace with regards to systematic offsets - and that measurements with very small offsets can perform better than the calculated HPD area implies. \n\n::: {.cell}\n\n```{.r .cell-code}\n##Loading the data - use URL to github - better reproducibility and no duplication.\n\nsingles_data_url <- \"https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv\"   ##Thank you to https://lokraj.me/post/download-github-data/ for the tutorial!\nsingles_data <- read_csv(url(singles_data_url))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n## Do the transforms necessary and plot the figures\n## Want to have the bars in the range from zero to one, for easy compare with HPD areas\n\nsingles_data %>%\n  mutate(\n    offset_magnitude = round(offset_magnitude)\n    ) %>%\n  group_by(offset_magnitude) %>%\n  summarize(\n    `68.2% HPD Area` = mean(accuracy_68),\n    `95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures\n  ) %>%\n  pivot_longer(!offset_magnitude, names_to = \"hpd_area\", \n               values_to = \"ratio_accurate\") %>%\n  ggplot(aes(x = offset_magnitude, y = ratio_accurate)) +\n  geom_bar(stat = 'identity') +\n  facet_wrap(~hpd_area)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}