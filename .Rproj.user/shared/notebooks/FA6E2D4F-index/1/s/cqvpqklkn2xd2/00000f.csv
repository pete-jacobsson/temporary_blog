"0","### Now get the numbers out of the models - aka the actual hard bit XP"
"0",""
"0","model_names <- colnames(single_cals_modelled)[4:11] ##These will tell us what results go with what model"
"0",""
"0","single_cals_log_results <- data.frame()"
"0","single_cals_log_diagnostics <- data.frame()"
"0",""
"0","for (model in model_names) {"
"0","  ## This will get a little experimental - we are trying to create a big old table!"
"0","  ## First, we thin down the DF to the model of interest"
"0","  temp_results <- single_cals_modelled %>%"
"0","    select(1, 2, all_of(model)) %>% #All of used to address deprecation"
"0","    rename(glm_list = 3) %>% #This rename allows map to work correctly"
"0","    mutate("
"0","      logistic_results = map(glm_list, tidy), # Do the map and also take note of which model"
"0","      model = model"
"0","    ) %>%"
"0","    select(-glm_list) %>% # Gets rid of the actual models (necessary for saving as csv)"
"0","    unnest(logistic_results)# Unnests results"
"0","  "
"0","  temp_diagnostics <- single_cals_modelled %>% ## Similar to above"
"0","    select(1, 2, all_of(model)) %>%"
"0","    rename(glm_list = 3) %>%"
"0","    mutate("
"0","      logistic_diagnostics = map(glm_list, glance),"
"0","      model = model"
"0","    ) %>%"
"0","    select(-glm_list) %>%"
"0","    unnest(logistic_diagnostics)"
"0","  "
"0","  single_cals_log_results <- rbind(single_cals_log_results, temp_results)"
"0","  single_cals_log_diagnostics <- rbind(single_cals_log_diagnostics, "
"0","                                       temp_diagnostics)"
"0",""
"0","}"
