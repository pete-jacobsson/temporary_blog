"0","#### I'm leaving the above for posterity to see the error of my ways.... this approach is too ugly. What we really need is two functions that will produce the vectors required. An estimate difference calculator and a chi squared estimator. What they'll need to do is to take on a vector of estimates, a vector of standard deviations and return a vector of the desired type of results."
"0",""
"0",""
"0",""
"0","estimate_running_diff <- function(estimates, stdevs) {"
"0","  ###Note assumptions: vectors longer than two, and equal length!"
"0","  ###If ever planned to publish the function would need a check and a warning for input lengths!"
"0","  "
"0","  difs <- c() ## our results will go here"
"0","  "
"0","  for (i in 2 : length(estimates)) {"
"0","    estimate_curr <- estimates[i] # A flourish - makes it easier for the likes of me to read!"
"0","    estimate_prev <- estimates[i-1]"
"0","    stdev_curr <- stdevs[i]"
"0","    stdev_prev <- stdevs[i-1]"
"0","    "
"0","    estimate_diff <- (estimate_curr - estimate_prev) /"
"0","                     (sqrt(stdev_curr^2 + stdev_prev^2))"
"0","    "
"0","    difs <- c(difs, estimate_diff)"
"0","  }"
"0","  "
"0","  difs"
"0","  "
"0","}"
"0",""
"0","estimate_running_diff(single_cals_log_results_wider_neg$estimate_offset_magnitude,"
"0","                      single_cals_log_results_wider_neg$std.error_offset_magnitude)"
"1"," [1]"
"1"," -2.08370094"
"1","  0.32524855"
"1","  0.30211499"
"1"," -0.60119882"
"1","  0.41330286"
"1","  0.66197474"
"1","  0.22272234"
"1"," -1.73100750"
"1","  1.76107096"
"1"," -1.49491748"
"1","  0.83344412"
"1","  1.20121960"
"1","
"
"1","[13]"
"1"," -1.79586573"
"1","  2.64873651"
"1"," -1.60771005"
"1"," -0.97929454"
"1","  1.64284806"
"1"," -1.17989519"
"1","  0.31347931"
"1","  0.39997139"
"1"," -0.79102720"
"1","  0.85371369"
"1","  0.25020830"
"1"," -1.52485781"
"1","
"
"1","[25]"
"1","  0.54413992"
"1","  0.48668162"
"1"," -0.08725081"
"1"," -0.14210516"
"1","  0.37549968"
"1"," -1.55191130"
"1","  0.98345995"
"1","  0.79850734"
"1","  0.94099956"
"1"," -0.90062646"
"1","  0.49782976"
"1"," -0.09581947"
"1","
"
"1","[37]"
"1"," -0.90958263"
"1","  0.24048023"
"1","  0.98680259"
"1"," -1.26465616"
"1"," -0.33253012"
"1","  0.80416787"
"1","  0.64243707"
"1"," -0.80010079"
"1"," -0.87988716"
"1","  0.84540734"
"1"," -0.47921472"
"1","  0.08408693"
"1","
"
"1","[49]"
"1","  0.53146522"
"1","  0.90343768"
"1"," -1.64891532"
"1","  1.44553007"
"1"," -1.12383047"
"1","  0.08615911"
"1"," -0.01315297"
"1","  0.57502509"
"1"," -0.74827939"
"1","  0.60485761"
"1"," -1.00349624"
"1","  1.12892048"
"1","
"
"1","[61]"
"1"," -0.61526246"
"1"," -0.47606547"
"1","  0.54276316"
"1","  1.01476907"
"1"," -0.68361877"
"1"," -0.73430571"
"1"," -0.05296765"
"1"," -0.01374767"
"1","  0.07043315"
"1","  0.75460148"
"1","  1.25630151"
"1"," -1.84806243"
"1","
"
"1","[73]"
"1","  1.15066037"
"1"," -0.81155962"
"1"," -0.12002743"
"1","  0.90349275"
"1"," -1.22706805"
"1"," -1.21152955"
"1","  2.24833585"
"1"," -0.19648757"
"1"," -0.66898005"
"1"," -1.07817076"
"1","  1.65515764"
"1"," -1.20949908"
"1","
"
"1","[85]"
"1","  1.35519988"
"1"," -1.35419379"
"1"," -1.26941271"
"1","  1.21270131"
"1","  0.07098153"
"1"," -0.15309419"
"1","  0.06913556"
"1","  0.65827257"
"1","  0.25459024"
"1"," -0.31455577"
"1"," -0.71356554"
"1","  1.51540335"
"1","
"
"1","[97]"
"1"," -0.62204926"
"1"," -0.64263998"
"1"," -0.09235868"
"1","
"
