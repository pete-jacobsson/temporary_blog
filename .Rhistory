geom_point() +
geom_linerange(aes(ymax = acc_zero_max, ymin = acc_zero_min)) +
facet_grid(rows = vars(hpd_area), cols = vars(offset_dir))
offset_curve_sigma_comb_interact_params |>
filter(str_detect(term, "Interce")) |>
select(is_pos, model, estimate, std.error) |>
mutate(
acc_zero = 1 / (1 + exp(- estimate)),
acc_zero_min = 1 / (1 + exp(- (estimate - 2 * std.error))),
acc_zero_max = 1 / (1 + exp(- (estimate + 2 * std.error))),
) |>
mutate(
offset_dir = if_else(is_pos, "Positive", "Negative"),
hpd_area = str_extract(model, "\\d{2}"),
hpd_area = str_c(hpd_area, "% HPD Area"),
model = if_else(str_detect(model, "intera"), "Interaction", "No interaction")
) |>
select(offset_dir, model, hpd_area, acc_zero,
acc_zero_min, acc_zero_max) |>
ggplot(aes(x = model, y = acc_zero)) +
geom_point() +
geom_linerange(aes(ymax = acc_zero_max, ymin = acc_zero_min)) +
facet_grid(rows = vars(hpd_area), cols = vars(offset_dir))
offset_curve_sigma_comb_interact_params <- readRDS("single_cals_curve_uncert_regr.rds") |>
filter(str_detect(model, "comb")) |>
mutate(model_results = map(model_results, tidy)) |>
unnest(cols = c(model_results))
offset_curve_sigma_comb_interact_params |>
filter(str_detect(term, "Interce")) |>
select(is_pos, model, estimate, std.error) |>
mutate(
acc_zero = 1 / (1 + exp(- estimate)),
acc_zero_min = 1 / (1 + exp(- (estimate - 2 * std.error))),
acc_zero_max = 1 / (1 + exp(- (estimate + 2 * std.error))),
) |>
mutate(
offset_dir = if_else(is_pos, "Positive", "Negative"),
hpd_area = str_extract(model, "\\d{2}"),
hpd_area = str_c(hpd_area, "% HPD Area"),
model = if_else(str_detect(model, "intera"), "Interaction", "No interaction")
) |>
select(offset_dir, model, hpd_area, acc_zero,
acc_zero_min, acc_zero_max) |>
ggplot(aes(x = model, y = acc_zero)) +
geom_point() +
geom_linerange(aes(ymax = acc_zero_max, ymin = acc_zero_min)) +
facet_grid(rows = vars(hpd_area), cols = vars(offset_dir)) +
ylim(c(0, 1))
offset_curve_sigma_comb_interact_params <- readRDS("single_cals_curve_uncert_regr.rds") |>
filter(str_detect(model, "comb")) |>
mutate(model_results = map(model_results, tidy)) |>
unnest(cols = c(model_results))
offset_curve_sigma_comb_interact_params |>
filter(str_detect(term, "Interce")) |>
select(is_pos, model, estimate, std.error) |>
mutate(
acc_zero = 1 / (1 + exp(- estimate)),
acc_zero_min = 1 / (1 + exp(- (estimate - 2 * std.error))),
acc_zero_max = 1 / (1 + exp(- (estimate + 2 * std.error))),
) |>
mutate(
offset_dir = if_else(is_pos, "Positive", "Negative"),
hpd_area = str_extract(model, "\\d{2}"),
hpd_area = str_c(hpd_area, "% HPD Area"),
model = if_else(str_detect(model, "intera"), "Interaction", "No interaction")
) |>
select(offset_dir, model, hpd_area, acc_zero,
acc_zero_min, acc_zero_max) |>
ggplot(aes(x = model, y = acc_zero)) +
geom_point() +
geom_linerange(aes(ymax = acc_zero_max, ymin = acc_zero_min)) +
facet_grid(rows = vars(hpd_area), cols = vars(offset_dir)) +
ylim(c(0, 1)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
offset_curve_sigma_comb_interact_params <- readRDS("single_cals_curve_uncert_regr.rds") |>
filter(str_detect(model, "comb")) |>
mutate(model_results = map(model_results, tidy)) |>
unnest(cols = c(model_results))
offset_curve_sigma_comb_interact_params |>
filter(str_detect(term, "Interce")) |>
select(is_pos, model, estimate, std.error) |>
mutate(
acc_zero = 1 / (1 + exp(- estimate)),
acc_zero_min = 1 / (1 + exp(- (estimate - 2 * std.error))),
acc_zero_max = 1 / (1 + exp(- (estimate + 2 * std.error))),
) |>
mutate(
offset_dir = if_else(is_pos, "Positive", "Negative"),
hpd_area = str_extract(model, "\\d{2}"),
hpd_area = str_c(hpd_area, "% HPD Area"),
model = if_else(str_detect(model, "intera"), "Interaction", "No interaction")
) |>
select(offset_dir, model, hpd_area, acc_zero,
acc_zero_min, acc_zero_max) |>
ggplot(aes(x = model, y = acc_zero)) +
geom_point() +
geom_linerange(aes(ymax = acc_zero_max, ymin = acc_zero_min)) +
facet_grid(rows = vars(hpd_area), cols = vars(offset_dir)) +
ylim(c(0, 1)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
)
offset_curve_sigma_comb_interact_params <- readRDS("single_cals_curve_uncert_regr.rds") |>
filter(str_detect(model, "comb")) |>
mutate(model_results = map(model_results, tidy)) |>
unnest(cols = c(model_results))
offset_curve_sigma_comb_interact_params |>
filter(str_detect(term, "Interce")) |>
select(is_pos, model, estimate, std.error) |>
mutate(
acc_zero = 1 / (1 + exp(- estimate)),
acc_zero_min = 1 / (1 + exp(- (estimate - 2 * std.error))),
acc_zero_max = 1 / (1 + exp(- (estimate + 2 * std.error))),
) |>
mutate(
offset_dir = if_else(is_pos, "Positive", "Negative"),
hpd_area = str_extract(model, "\\d{2}"),
hpd_area = str_c(hpd_area, "% HPD Area"),
model = if_else(str_detect(model, "intera"), "Interaction", "No interaction")
) |>
select(offset_dir, model, hpd_area, acc_zero,
acc_zero_min, acc_zero_max) |>
ggplot(aes(x = model, y = acc_zero)) +
geom_point() +
geom_linerange(aes(ymax = acc_zero_max, ymin = acc_zero_min)) +
facet_grid(rows = vars(hpd_area), cols = vars(offset_dir)) +
ylim(c(0, 1)) +
theme_bw() +
theme(
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
#legend.position = "none",
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel"),
axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "",
y = "Ratio accurate",
title = "Predicted ratio of accurate observations under no offset and no error"
)
library(tidyverse)
skills_df_url <- "https://raw.githubusercontent.com/pete-jacobsson/what_makes_a_data_analyst/main/skills_df.csv"
skills_df <- read_csv(url(skills_df_url))
library(tidyverse)
skills_df_url <- "https://raw.githubusercontent.com/pete-jacobsson/what_makes_a_data_analyst/main/skills_df.csv"
skills_df <- read_csv(url(skills_df_url))
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "grey20") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df_url <- "https://raw.githubusercontent.com/pete-jacobsson/what_makes_a_data_analyst/main/skills_df.csv"
skills_df <- read_csv(url(skills_df_url))
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df_url <- "https://raw.githubusercontent.com/pete-jacobsson/what_makes_a_data_analyst/main/skills_df.csv"
skills_df <- read_csv(url(skills_df_url))
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "grey80") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df_url <- "https://raw.githubusercontent.com/pete-jacobsson/what_makes_a_data_analyst/main/skills_df.csv"
skills_df <- read_csv(url(skills_df_url))
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white"") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
skills_df_url <- "https://raw.githubusercontent.com/pete-jacobsson/what_makes_a_data_analyst/main/skills_df.csv"
skills_df <- read_csv(url(skills_df_url))
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(label = count)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(label = count) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count)) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count), nudge_x = 4) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count), nudge_y = 4) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count), nudge_y = 3) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count), nudge_y = 2) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count), nudge_y = 2, size = 8) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count), nudge_y = 2, size = 4) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
skills_df |>
head(28) |>
mutate(
term = as_factor(term)
) |>
filter(term != "Analytics") |> ### This category is largest - which makes sense, but we know it from the job description :)
ggplot(aes(x = fct_infreq(term), y = count)) +
geom_bar(stat = 'identity', fill = "steelblue", color = "white") +
geom_text(aes(label = count), nudge_y = 2, size = 3) +
coord_flip() +
scale_x_discrete(limits = rev) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
axis.line = element_line(colour = "grey50", size = 0.5),
text = element_text(family = "Corbel")#,
#axis.text.x = element_text(angle = 45, vjust = 1, hjust=1, size = 9)
) +
labs(
x = "GPT-detected keyword",
y = "Count"
)
