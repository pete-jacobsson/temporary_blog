) %>%
group_by(target_year, measurement_error, ) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95)
) %>%
pivot_longer(c(`68.2% HPD Area`, `95.4% HPD Area`), names_to = "hpd_area",
values_to = "ratio_accurate") %>%
ggplot(aes(x = target_year, y = measurement_error)) +
geom_raster(aes(fill = ratio_accurate)) +
facet_wrap(~hpd_area)
### Heatmap here
singles_data %>%
mutate(
target_year = plyr::round_any(target_year, 800),
measurement_error = plyr::round_any(measurement_error, 8)
) %>%
group_by(target_year, measurement_error, ) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95)
) %>%
pivot_longer(c(`68.2% HPD Area`, `95.4% HPD Area`), names_to = "hpd_area",
values_to = "ratio_accurate") %>%
ggplot(aes(x = target_year, y = measurement_error)) +
geom_raster(aes(fill = ratio_accurate)) +
facet_wrap(~hpd_area)  theme_bw() +
### Heatmap here
singles_data %>%
mutate(
target_year = plyr::round_any(target_year, 800),
measurement_error = plyr::round_any(measurement_error, 8)
) %>%
group_by(target_year, measurement_error, ) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95)
) %>%
pivot_longer(c(`68.2% HPD Area`, `95.4% HPD Area`), names_to = "hpd_area",
values_to = "ratio_accurate") %>%
ggplot(aes(x = target_year, y = measurement_error)) +
geom_raster(aes(fill = ratio_accurate)) +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Target year",
y = "Measurement error"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
## Do the transforms necessary and plot the figures
## Want to have the bars in the range from zero to one, for easy compare with HPD areas
singles_data %>%
mutate(
offset_magnitude = round(offset_magnitude)
) %>%
group_by(offset_magnitude) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!offset_magnitude, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Offset magnitude (14^C yrs)",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
### Heatmap here
singles_data %>%
mutate(
target_year = plyr::round_any(target_year, 800),
measurement_error = plyr::round_any(measurement_error, 8)
) %>%
group_by(target_year, measurement_error, ) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95)
) %>%
pivot_longer(c(`68.2% HPD Area`, `95.4% HPD Area`), names_to = "hpd_area",
values_to = "ratio_accurate") %>%
ggplot(aes(x = target_year, y = measurement_error)) +
geom_raster(aes(fill = ratio_accurate)) +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Target year",
y = "Measurement error"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
library(tidyverse)
##Loading the data - use URL to github - better reproducibility and no duplication.
singles_data_url <- "https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv"   ##Thank you to https://lokraj.me/post/download-github-data/ for the tutorial!
singles_data <- read_csv(url(singles_data_url))
## Do the transforms necessary and plot the figures
## Want to have the bars in the range from zero to one, for easy compare with HPD areas
singles_data %>%
mutate(
offset_magnitude = round(offset_magnitude)
) %>%
group_by(offset_magnitude) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!offset_magnitude, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Offset magnitude (14C yrs)",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
## Do the transforms necessary and plot the figures
## Want to have the bars in the range from zero to one, for easy compare with HPD areas
singles_data %>%
mutate(
offset_magnitude = round(offset_magnitude)
) %>%
group_by(offset_magnitude) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!offset_magnitude, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Offset magnitude (14C yrs)",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
## Do the transforms necessary and plot the figures
## Want to have the bars in the range from zero to one, for easy compare with HPD areas
singles_data %>%
mutate(
offset_magnitude = round(offset_magnitude)
) %>%
group_by(offset_magnitude) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!offset_magnitude, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Offset magnitude (14C yrs)",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
singles_data %>%
mutate(
target_year = plyr::round_any(target_year, 200)
) %>%
group_by(target_year) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!target_year, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = target_year, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Target Year (Cal BP)",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
## Do the transforms necessary and plot the figures
## Want to have the bars in the range from zero to one, for easy compare with HPD areas
singles_data %>%
mutate(
measurement_error = round(measurement_error)
) %>%
group_by(measurement_error) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!measurement_error, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = measurement_error, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Measurement error",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
### Heatmap here
singles_data %>%
mutate(
target_year = plyr::round_any(target_year, 800),
measurement_error = plyr::round_any(measurement_error, 8)
) %>%
group_by(target_year, measurement_error, ) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95)
) %>%
pivot_longer(c(`68.2% HPD Area`, `95.4% HPD Area`), names_to = "hpd_area",
values_to = "ratio_accurate") %>%
ggplot(aes(x = target_year, y = measurement_error)) +
geom_raster(aes(fill = ratio_accurate)) +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Target year",
y = "Measurement error"
) +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
)
### Set-up for fifty bins
singles_data_url <- "https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv"
singles_data <- read_csv(url(singles_data_url))
library(tidyverse)
library(tidyverse)
library(broom)
### Set-up for fifty bins
singles_data_url <- "https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv"
library(tidyverse)
library(broom)
### Set-up for fifty bins
singles_data_url <- "https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv"
singles_data <- read_csv(url(singles_data_url))
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
offset_magnitude = if_else(offset_pos,
offset_magnitude, offset_magnitude * -1),
# Changing negs on offset magnitude to have a consistent direction at downstream visualization.
binned_targets = ntile(target_year, 50)
) %>%
select(-target_year)
library(tidyverse)
library(broom)
### Set-up for fifty bins
singles_data_url <- "https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv"
single_cals <- read_csv(url(singles_data_url))
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
offset_magnitude = if_else(offset_pos,
offset_magnitude, offset_magnitude * -1),
# Changing negs on offset magnitude to have a consistent direction at downstream visualization.
binned_targets = ntile(target_year, 50)
) %>%
select(-target_year)
### ntile() wouldn't return the relevant target years, so it needs to be done as its own thing.
single_cals_modelled <- single_cals %>%
mutate(binned_targets = ntile(target_year, 50)) %>%
group_by(binned_targets) %>%
summarize( #Easy way to get years for the indiv bins, without too muchj headach
target_year = min(target_year)
) %>%
inner_join(single_cals_modelled) %>% #Join the binned DF back in. No, I don't like this either!
group_by(offset_pos, target_year) %>%
nest()
library(tidyverse)
library(broom)
### Set-up for fifty bins
singles_data_url <- "https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv"
single_cals <- read_csv(url(singles_data_url))
###Seperate pos from neg offsets and group things by cal curve
single_cals_modelled <- single_cals %>%
mutate (
offset_pos = if_else(offset_magnitude > 0, TRUE, FALSE),
offset_magnitude = if_else(offset_pos,
offset_magnitude, offset_magnitude * -1),
# Changing negs on offset magnitude to have a consistent direction at downstream visualization.
binned_targets = ntile(target_year, 50)
) %>%
select(-target_year)
### ntile() wouldn't return the relevant target years, so it needs to be done as its own thing.
single_cals_modelled <- single_cals %>%
mutate(binned_targets = ntile(target_year, 50)) %>%
group_by(binned_targets) %>%
summarize( #Easy way to get years for the indiv bins, without too muchj headach
target_year = min(target_year)
) %>%
inner_join(single_cals_modelled) %>% #Join the binned DF back in. No, I don't like this either!
group_by(offset_pos, target_year) %>%
nest()
### Build the model functions
offset_only_acc68 <- function(singles_data) {
glm(accuracy_68 ~ offset_magnitude, data = singles_data,
family = binomial)
}
sigma_only_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error, data = singles_data,
family = binomial)
}
offset_sigma_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude, data = singles_data,
family = binomial)
}
offset_sigma_interact_acc68 <- function(singles_data) {
glm(accuracy_68 ~ measurement_error + offset_magnitude +
measurement_error * offset_magnitude,
data = singles_data, family = binomial)
}
offset_only_acc95 <- function(singles_data) {
glm(accuracy_95 ~ offset_magnitude, data = singles_data,
family = binomial)
}
sigma_only_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error, data = singles_data,
family = binomial)
}
offset_sigma_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude, data = singles_data,
family = binomial)
}
offset_sigma_interact_acc95 <- function(singles_data) {
glm(accuracy_95 ~ measurement_error + offset_magnitude +
measurement_error * offset_magnitude,
data = singles_data, family = binomial)
}
## Note to future self: some smart pivoting earlier on could have simplified this by half :)
### Model execution
single_cals_modelled <- single_cals_modelled %>%
mutate(
offset_only_acc68 = map(data, offset_only_acc68),
sigma_only_acc68 = map(data, sigma_only_acc68),
offset_sigma_acc68 = map(data, offset_sigma_acc68),
offset_sigma_interact_acc68 = map(data, offset_sigma_interact_acc68),
offset_only_acc95 = map(data, offset_only_acc95),
sigma_only_acc95 = map(data, sigma_only_acc95),
offset_sigma_acc95 = map(data, offset_sigma_acc95),
offset_sigma_interact_acc95 = map(data, offset_sigma_interact_acc95)
)
### Now get the numbers out of the models - aka the actual hard bit XP
model_names <- colnames(single_cals_modelled)[4:11] ##These will tell us what results go with what model
single_cals_log_results <- data.frame()
single_cals_log_diagnostics <- data.frame()
for (model in model_names) {
## This will get a little experimental - we are trying to create a big old table!
## First, we thin down the DF to the model of interest
temp_results <- single_cals_modelled %>%
select(1, 2, all_of(model)) %>% #All of used to address deprecation
rename(glm_list = 3) %>% #This rename allows map to work correctly
mutate(
logistic_results = map(glm_list, tidy), # Do the map and also take note of which model
model = model
) %>%
select(-glm_list) %>% # Gets rid of the actual models (necessary for saving as csv)
unnest(logistic_results)# Unnests results
temp_diagnostics <- single_cals_modelled %>% ## Similar to above
select(1, 2, all_of(model)) %>%
rename(glm_list = 3) %>%
mutate(
logistic_diagnostics = map(glm_list, glance),
model = model
) %>%
select(-glm_list) %>%
unnest(logistic_diagnostics)
single_cals_log_results <- rbind(single_cals_log_results, temp_results)
single_cals_log_diagnostics <- rbind(single_cals_log_diagnostics,
temp_diagnostics)
}
single_cals_log_diagnostics %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset")
) %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = target_year, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw() +
scale_color_manual(values = c("darkblue", "blue", "steelblue", "gray")) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
) +
labs(x = "Cal yrs BP")
single_cals_log_diagnostics %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset")
) %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = target_year, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw() +
scale_color_manual(values = c("darkblue", "blue", "steelblue", "gray")) +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
labs(x = "Cal yrs BP")
single_cals_log_diagnostics %>%
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset")
) %>%
filter(str_detect(model, "68")) %>%
ggplot(aes(x = target_year, y = AIC)) +
geom_line(aes(color = model)) +
facet_wrap(~offset_pos) +
theme_bw() +
scale_color_manual(values = c("darkblue", "blue", "steelblue", "gray")) +
theme(
panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(
color="white", fill="white"
),
text = element_text(family = "Corbel")
) +
labs(
subtitle = "68.2% HPD Area models: AIC values",
x = "Cal yrs BP"
)
