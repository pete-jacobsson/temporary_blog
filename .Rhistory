single_cals_log_results_wider_neg$`std.error_(Intercept)`
),
neg_interaction = estimate_running_diff(
single_cals_log_results_wider_neg$`estimate_measurement_error:offset_magnitude`,
single_cals_log_results_wider_neg$`std.error_measurement_error:offset_magnitude`
)
) %>%
pivot_longer(!target_year, names_to = "parameter", values_to = "z_value") %>%
mutate(
offset_direction = if_else(str_detect(parameter, "pos"), "pos", "neg"),
parameter = str_remove(parameter, "pos_|neg_")
)
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2)) +
geom_line(aes(color = parameter)) +
geom_facet(~offset_direction)
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2)) +
geom_line(aes(color = parameter)) +
facet_wrap(~offset_direction)
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2)) +
geom_line(aes(color = offset_direction)) +
facet_wrap(~parameter)
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2), size = 0.75, linetype = "dashed") +
geom_line(aes(color = offset_direction)) +
facet_wrap(~parameter)
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2), size = 0.5, linetype = "dashed") +
geom_line(aes(color = offset_direction)) +
facet_wrap(~parameter)
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2), size = 0.5, linetype = "dashed") +
geom_line(aes(color = offset_direction)) +
facet_wrap(~parameter) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_color_discrete(name = "offset_direction", values = c("steelblue", "darkblue"))
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2), size = 0.5, linetype = "dashed") +
geom_line(aes(color = offset_direction)) +
facet_wrap(~parameter) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_color_discrete( values = c("steelblue", "darkblue"))
z_test_comparisons %>%
ggplot(aes(x = target_year, y = z_value)) +
geom_hline(yintercept = c(-2, 2), size = 0.5, linetype = "dashed") +
geom_line(aes(color = offset_direction)) +
facet_wrap(~parameter) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_color_manual( values = c("steelblue", "darkblue"))
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = term), alpha = 0.2, color = "grey75") +
geom_line(aes(color = term), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model)) +
ylim(c(-2, 2)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
) +
scale_fill_manual(name = "Parameter", values = c("steelblue", "grey50", "darkblue")) +
scale_color_discrete(name = "Parameter")
View(single_cals_log_results)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD"),
Intercept = `(Intercept)`
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD"),
Intercept = (Intercept)
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = "steelblue"), alpha = 0.2, color = "grey75") +
geom_line(aes(color = "steelblue"), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model)) +
ylim(c(-2, 2)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
#geom_line(aes(color = "steelblue"), linetype = "dotted") +
facet_wrap(~model)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
#geom_line(aes(color = "steelblue"), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free")
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
ylim(c(-2, 2)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & !str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
ylim(c(-2, 2)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept"))
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75")
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free")
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
ylim(c(-2, 2)) +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
ylim(c(-2, 2)) +
theme_bw()
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
single_cals_log_results %>%
filter(str_detect(model, "interact") & str_detect(term, "Intercept")) %>%
filter(!(target_year %in% c(7019, 7751, 9076, 11091) &
str_detect(model, "95"))) %>%  ## This removes extreme values of the 95% model in the visualizations
mutate(
offset_pos = if_else(offset_pos, "Pos offset", "Neg offset"),
model = if_else(str_detect(model, "68"), "68.2% HPD", "95.4% HPD")
) %>%
ggplot(aes(x = target_year, y = estimate)) +
geom_hline(yintercept = 0) +
geom_ribbon(aes(ymin = estimate - std.error * 2,
ymax = estimate + std.error * 2,
fill = offset_pos), alpha = 0.2, color = "grey75") +
geom_line(aes(color = offset_pos), linetype = "dotted") +
facet_grid(cols = vars(offset_pos), rows = vars(model), scales = "free") +
theme_bw() +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
library(tidyverse)
##Loading the data - use URL to github - better reproducibility and no duplication.
singles_data_url <- "https://raw.githubusercontent.com/pete-jacobsson/14C-power-sensitivity/main/simulation_results/singles_011_results.csv"   ##Thank you to https://lokraj.me/post/download-github-data/ for the tutorial!
singles_data <- read_csv(url(singles_data_url))
singles_data %>%
mutate(
target_year = plyr::round_any(offset_magnitude, 100)
)
singles_data %>%
mutate(
target_year = plyr::round_any(offset_magnitude, 100, f = floor)
)
singles_data %>%
mutate(
target_year = plyr::round_any(offset_magnitude, 100)
) %>%
group_by(target_year) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!target_year, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = offset_magnitude, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Target Year",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
singles_data %>%
mutate(
target_year = plyr::round_any(offset_magnitude, 100)
) %>%
group_by(target_year) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!target_year, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = target_year, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Target Year",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
singles_data %>%
mutate(
target_year = plyr::round_any(offset_magnitude, 100)
) %>%
group_by(target_year) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!target_year, names_to = "hpd_area",
values_to = "ratio_accurate")
singles_data %>%
mutate(
target_year = plyr::round_any(offset_magnitude, 100)
)
singles_data %>%
mutate(
target_year = plyr::round_any(target_year, 100)
) %>%
group_by(target_year) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!target_year, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = target_year, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Target Year",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
## Do the transforms necessary and plot the figures
## Want to have the bars in the range from zero to one, for easy compare with HPD areas
singles_data %>%
mutate(
measurement_error = round(measurement_error)
) %>%
group_by(measurement_error) %>%
summarize(
`68.2% HPD Area` = mean(accuracy_68),
`95.4% HPD Area` = mean(accuracy_95) ##Naming to work for figures
) %>%
pivot_longer(!measurement_error, names_to = "hpd_area",
values_to = "ratio_accurate") %>%
mutate(line_for_nominal = if_else(str_detect(hpd_area, "68"), 0.682, 0.954)) %>%
ggplot(aes(x = measurement_error, y = ratio_accurate)) +
geom_hline(aes(yintercept = line_for_nominal), linetype = "dashed") +
geom_bar(stat = 'identity', color = "steelblue", fill = "steelblue") +
facet_wrap(~hpd_area) +
theme_bw() +
labs(
x = "Measurement error",
y = "Ratio accurate"
) +
theme(
panel.grid.minor = element_blank(),
strip.background = element_rect(
color="black", fill="white"
),
text = element_text(family = "Corbel")
)
